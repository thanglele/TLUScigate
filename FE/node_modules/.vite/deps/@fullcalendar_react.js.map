{
  "version": 3,
  "sources": ["../../@fullcalendar/react/src/index.tsx"],
  "sourcesContent": ["import React, { Component, createRef, PureComponent } from 'react'\r\nimport { createPortal, flushSync } from 'react-dom'\r\nimport {\r\n  CalendarOptions,\r\n  CalendarApi,\r\n  Calendar,\r\n} from '@fullcalendar/core'\r\nimport {\r\n  CustomRendering,\r\n  CustomRenderingStore,\r\n} from '@fullcalendar/core/internal'\r\n\r\nconst reactMajorVersion = parseInt(String(React.version).split('.')[0])\r\nconst syncRenderingByDefault = reactMajorVersion < 18\r\n\r\ninterface CalendarState {\r\n  customRenderingMap: Map<string, CustomRendering<any>>\r\n}\r\n\r\nexport default class FullCalendar extends Component<CalendarOptions, CalendarState> {\r\n  static act = runNow // DEPRECATED. Not leveraged anymore\r\n\r\n  private elRef = createRef<HTMLDivElement>()\r\n  private calendar: Calendar\r\n  private handleCustomRendering: (customRendering: CustomRendering<any>) => void\r\n  private resizeId: number | undefined\r\n  private isUpdating = false\r\n  private isUnmounting = false\r\n\r\n  state: CalendarState = {\r\n    customRenderingMap: new Map<string, CustomRendering<any>>()\r\n  }\r\n\r\n  render() {\r\n    const customRenderingNodes: JSX.Element[] = []\r\n\r\n    for (const customRendering of this.state.customRenderingMap.values()) {\r\n      customRenderingNodes.push(\r\n        <CustomRenderingComponent\r\n          key={customRendering.id}\r\n          customRendering={customRendering}\r\n        />\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div ref={this.elRef}>\r\n        {customRenderingNodes}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    // reset b/c react strict-mode calls componentWillUnmount/componentDidMount\r\n    this.isUnmounting = false\r\n\r\n    const customRenderingStore = new CustomRenderingStore<unknown>()\r\n    this.handleCustomRendering = customRenderingStore.handle.bind(customRenderingStore)\r\n\r\n    this.calendar = new Calendar(this.elRef.current, {\r\n      ...this.props,\r\n      handleCustomRendering: this.handleCustomRendering,\r\n    })\r\n    this.calendar.render()\r\n\r\n    // attaching with .on() will cause this to fire AFTER internal preact rendering did flushSync\r\n    this.calendar.on('_beforeprint', () => {\r\n      flushSync(() => {\r\n        // our `customRenderingMap` state will be flushed at this point\r\n      })\r\n    })\r\n\r\n    let lastRequestTimestamp: number | undefined\r\n\r\n    customRenderingStore.subscribe((customRenderingMap) => {\r\n      const requestTimestamp = Date.now()\r\n      const isMounting = !lastRequestTimestamp\r\n      const runFunc = (\r\n        // don't call flushSync if React version already does sync rendering by default\r\n        // guards against fatal errors:\r\n        // https://github.com/fullcalendar/fullcalendar/issues/7448\r\n        syncRenderingByDefault ||\r\n        //\r\n        isMounting ||\r\n        this.isUpdating ||\r\n        this.isUnmounting ||\r\n        (requestTimestamp - lastRequestTimestamp) < 100 // rerendering frequently\r\n      ) ? runNow // either sync rendering (first-time or React 16/17) or async (React 18)\r\n        : flushSync // guaranteed sync rendering\r\n\r\n      runFunc(() => {\r\n        this.setState({ customRenderingMap }, () => {\r\n          lastRequestTimestamp = requestTimestamp\r\n          if (isMounting) {\r\n            this.doResize()\r\n          } else {\r\n            this.requestResize()\r\n          }\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.isUpdating = true\r\n    this.calendar.resetOptions({\r\n      ...this.props,\r\n      handleCustomRendering: this.handleCustomRendering,\r\n    })\r\n    this.isUpdating = false\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.isUnmounting = true\r\n    this.cancelResize()\r\n    this.calendar.destroy()\r\n  }\r\n\r\n  requestResize = () => {\r\n    if (!this.isUnmounting) {\r\n      this.cancelResize()\r\n      this.resizeId = requestAnimationFrame(() => {\r\n        this.doResize()\r\n      })\r\n    }\r\n  }\r\n\r\n  doResize() {\r\n    this.calendar.updateSize()\r\n  }\r\n\r\n  cancelResize() {\r\n    if (this.resizeId !== undefined) {\r\n      cancelAnimationFrame(this.resizeId)\r\n      this.resizeId = undefined\r\n    }\r\n  }\r\n\r\n  getApi(): CalendarApi {\r\n    return this.calendar\r\n  }\r\n}\r\n\r\n// Custom Rendering\r\n// -------------------------------------------------------------------------------------------------\r\n\r\ninterface CustomRenderingComponentProps {\r\n  customRendering: CustomRendering<any>\r\n}\r\n\r\nclass CustomRenderingComponent extends PureComponent<CustomRenderingComponentProps> {\r\n  render() {\r\n    const { customRendering } = this.props\r\n    const { generatorMeta } = customRendering\r\n    const vnode = typeof generatorMeta === 'function' ?\r\n      generatorMeta(customRendering.renderProps) :\r\n      generatorMeta\r\n\r\n    return createPortal(vnode, customRendering.containerEl)\r\n  }\r\n}\r\n\r\n// Util\r\n// -------------------------------------------------------------------------------------------------\r\n\r\nfunction runNow(f: () => void): void {\r\n  f()\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;AAAA,mBAA2D;AAC3D,uBAAwC;AAWxC,IAAM,oBAAoB,SAAS,OAAO,aAAAA,QAAM,OAAO,EAAE,MAAM,GAAG,EAAE,CAAC,CAAC;AACtE,IAAM,yBAAyB,oBAAoB;AAMnD,IAAqB,eAArB,cAA0C,uBAAyC;EAAnF,cAAA;;AAGU,SAAA,YAAQ,wBAAS;AAIjB,SAAA,aAAa;AACb,SAAA,eAAe;AAEvB,SAAA,QAAuB;MACrB,oBAAoB,oBAAI,IAAG;;AAwF7B,SAAA,gBAAgB,MAAK;AACnB,UAAI,CAAC,KAAK,cAAc;AACtB,aAAK,aAAY;AACjB,aAAK,WAAW,sBAAsB,MAAK;AACzC,eAAK,SAAQ;QACf,CAAC;;IAEL;EAgBF;EA5GE,SAAM;AACJ,UAAM,uBAAsC,CAAA;AAE5C,eAAW,mBAAmB,KAAK,MAAM,mBAAmB,OAAM,GAAI;AACpE,2BAAqB,KACnB,aAAAA,QAAA,cAAC,0BAAwB,EACvB,KAAK,gBAAgB,IACrB,gBAAgC,CAAA,CAChC;;AAIN,WACE,aAAAA,QAAA,cAAA,OAAA,EAAK,KAAK,KAAK,MAAK,GACjB,oBAAoB;EAG3B;EAEA,oBAAiB;AAEf,SAAK,eAAe;AAEpB,UAAM,uBAAuB,IAAI,qBAAoB;AACrD,SAAK,wBAAwB,qBAAqB,OAAO,KAAK,oBAAoB;AAElF,SAAK,WAAW,IAAI,SAAS,KAAK,MAAM,SAAO,OAAA,OAAA,OAAA,OAAA,CAAA,GAC1C,KAAK,KAAK,GAAA,EACb,uBAAuB,KAAK,sBAAqB,CAAA,CAAA;AAEnD,SAAK,SAAS,OAAM;AAGpB,SAAK,SAAS,GAAG,gBAAgB,MAAK;AACpC,sCAAU,MAAK;MAEf,CAAC;IACH,CAAC;AAED,QAAI;AAEJ,yBAAqB,UAAU,CAAC,uBAAsB;AACpD,YAAM,mBAAmB,KAAK,IAAG;AACjC,YAAM,aAAa,CAAC;AACpB,YAAM;;;;QAIJ;QAEA,cACA,KAAK,cACL,KAAK,gBACJ,mBAAmB,uBAAwB,MAC1C,SACA;;AAEJ,cAAQ,MAAK;AACX,aAAK,SAAS,EAAE,mBAAkB,GAAI,MAAK;AACzC,iCAAuB;AACvB,cAAI,YAAY;AACd,iBAAK,SAAQ;iBACR;AACL,iBAAK,cAAa;;QAEtB,CAAC;MACH,CAAC;IACH,CAAC;EACH;EAEA,qBAAkB;AAChB,SAAK,aAAa;AAClB,SAAK,SAAS,aAAY,OAAA,OAAA,OAAA,OAAA,CAAA,GACrB,KAAK,KAAK,GAAA,EACb,uBAAuB,KAAK,sBAAqB,CAAA,CAAA;AAEnD,SAAK,aAAa;EACpB;EAEA,uBAAoB;AAClB,SAAK,eAAe;AACpB,SAAK,aAAY;AACjB,SAAK,SAAS,QAAO;EACvB;EAWA,WAAQ;AACN,SAAK,SAAS,WAAU;EAC1B;EAEA,eAAY;AACV,QAAI,KAAK,aAAa,QAAW;AAC/B,2BAAqB,KAAK,QAAQ;AAClC,WAAK,WAAW;;EAEpB;EAEA,SAAM;AACJ,WAAO,KAAK;EACd;;AAxHO,aAAA,MAAM;AAkIf,IAAM,2BAAN,cAAuC,2BAA4C;EACjF,SAAM;AACJ,UAAM,EAAE,gBAAe,IAAK,KAAK;AACjC,UAAM,EAAE,cAAa,IAAK;AAC1B,UAAM,QAAQ,OAAO,kBAAkB,aACrC,cAAc,gBAAgB,WAAW,IACzC;AAEF,eAAO,+BAAa,OAAO,gBAAgB,WAAW;EACxD;;AAMF,SAAS,OAAO,GAAa;AAC3B,IAAC;AACH;",
  "names": ["React"]
}
